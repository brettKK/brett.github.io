<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on brettkk</title>
    <link>http://brettkk.github.io/tags/golang/</link>
    <description>Recent content in golang on brettkk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 06 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://brettkk.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>module name and module import path in Go</title>
      <link>http://brettkk.github.io/posts/golang/golang%E6%A8%A1%E5%9D%97%E7%AE%A1%E7%90%86/</link>
      <pubDate>Sat, 06 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>http://brettkk.github.io/posts/golang/golang%E6%A8%A1%E5%9D%97%E7%AE%A1%E7%90%86/</guid>
      <description>1. golang管理依赖 🔗 Modules are how Go manages dependencies. 1.1 module and packages 🔗 A module is a collection of packages.</description>
    </item>
    
    <item>
      <title>闭包closure</title>
      <link>http://brettkk.github.io/posts/rust/closure_at_go_c_py_rust/</link>
      <pubDate>Fri, 05 Aug 2022 11:33:56 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/rust/closure_at_go_c_py_rust/</guid>
      <description>what&#39;s closure in PL? 🔗 在函数式编程语言中，宣传函数是一等公民，把函数作为</description>
    </item>
    
    <item>
      <title>golang</title>
      <link>http://brettkk.github.io/posts/golang/golang%E7%89%B9%E8%89%B2/</link>
      <pubDate>Sat, 07 May 2022 18:54:41 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/golang/golang%E7%89%B9%E8%89%B2/</guid>
      <description>资料 🔗 目前golang的主要maintainer之一: Russ Co</description>
    </item>
    
    <item>
      <title>golang算法</title>
      <link>http://brettkk.github.io/posts/golang/golang%E7%AE%97%E6%B3%95/</link>
      <pubDate>Sat, 07 May 2022 18:54:41 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/golang/golang%E7%AE%97%E6%B3%95/</guid>
      <description>堆 与 优先队列 🔗type Heap struct { arr []int } 正则表达式的识别 🔗lru 🔗</description>
    </item>
    
    <item>
      <title>go同步编码方式</title>
      <link>http://brettkk.github.io/posts/golang/golang%E5%90%8C%E6%AD%A5%E7%BC%96%E7%A0%81%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Thu, 06 May 2021 18:34:48 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/golang/golang%E5%90%8C%E6%AD%A5%E7%BC%96%E7%A0%81%E6%96%B9%E5%BC%8F/</guid>
      <description>go同步方式 🔗 golang提供了比较便捷的协程并发编程方式。</description>
    </item>
    
    <item>
      <title>golang bug_fix</title>
      <link>http://brettkk.github.io/posts/golang/golang%E9%97%AE%E9%A2%98/</link>
      <pubDate>Tue, 04 May 2021 19:10:43 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/golang/golang%E9%97%AE%E9%A2%98/</guid>
      <description>可以解决的问题 🔗遇到过的bug init() 函数滥用 函数功能是查询类的，</description>
    </item>
    
    <item>
      <title>go内存模型</title>
      <link>http://brettkk.github.io/posts/golang/gomemorymodel/</link>
      <pubDate>Mon, 03 May 2021 18:34:48 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/golang/gomemorymodel/</guid>
      <description>go的内存模型规定： 在哪些情况下，一个golang中读取的变</description>
    </item>
    
    <item>
      <title>golang compiler</title>
      <link>http://brettkk.github.io/posts/golang/golang%E7%BC%96%E8%AF%91%E5%99%A8/</link>
      <pubDate>Sat, 01 May 2021 18:54:41 +0800</pubDate>
      
      <guid>http://brettkk.github.io/posts/golang/golang%E7%BC%96%E8%AF%91%E5%99%A8/</guid>
      <description>实际编译器 🔗编译器入口： src/cmd/compile/internal/gc/main.go#Main cmd/compile/internal/syntax 词法和语法分析 cmd/compile/internal/gc 类型检查， 处理语</description>
    </item>
    
  </channel>
</rss>
