{
  "type": "excalidraw",
  "version": 2,
  "source": "http://localhost:3000",
  "elements": [
    {
      "type": "rectangle",
      "version": 36,
      "versionNonce": 1316460247,
      "isDeleted": false,
      "id": "xva9c0MXQgX_snO_TlSRk",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 552.546875,
      "y": 124.17578125,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 426.36328125,
      "height": 76.73046875,
      "seed": 1041037913,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElements": [],
      "updated": 1660202352746,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 10,
      "versionNonce": 2003107511,
      "isDeleted": false,
      "id": "A07Rrd2gQyP7Dm-dahx4u",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 629,
      "y": 151,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 38,
      "height": 37,
      "seed": 1717107449,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElements": [],
      "updated": 1660202361555,
      "link": null,
      "locked": false,
      "fontSize": 28,
      "fontFamily": 1,
      "text": "LRU",
      "baseline": 29,
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "LRU"
    },
    {
      "type": "rectangle",
      "version": 162,
      "versionNonce": 1118187191,
      "isDeleted": false,
      "id": "5yEI973gX6esL8_jBDCJG",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 550.671875,
      "y": 224.22265625,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 567.00390625,
      "height": 200.48828125,
      "seed": 216579353,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElements": [],
      "updated": 1660205270300,
      "link": null,
      "locked": false
    },
    {
      "id": "fsuo72jPcLR7K0G_EhqaI",
      "type": "text",
      "x": 571.0390625,
      "y": 234.880859375,
      "width": 535,
      "height": 159,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 1667937017,
      "version": 386,
      "versionNonce": 365267609,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1660205265644,
      "link": null,
      "locked": false,
      "text": "lc 146 设计LRU缓存\n    get 和 put 在O（1）时间完成。\n    LRUCache(int capacity) , put时当容量达到上限时，\n应该删除最久未使用的数据。\n    思路： 哈希map + double linklist\n                                 + linklist 可以吗？可以的，map的value是pre_node",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 154,
      "containerId": null,
      "originalText": "lc 146 设计LRU缓存\n    get 和 put 在O（1）时间完成。\n    LRUCache(int capacity) , put时当容量达到上限时，\n应该删除最久未使用的数据。\n    思路： 哈希map + double linklist\n                                 + linklist 可以吗？可以的，map的value是pre_node"
    },
    {
      "id": "CRrsh0_405plTUjjWBgkQ",
      "type": "rectangle",
      "x": 549.94921875,
      "y": 448.748046875,
      "width": 522.9804687499999,
      "height": 1739.1015625000002,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 1184197881,
      "version": 275,
      "versionNonce": 1490884473,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1660205129669,
      "link": null,
      "locked": false
    },
    {
      "id": "1SFyNkezk1lOeL_r-T9jK",
      "type": "text",
      "x": 573.0390625,
      "y": 464.880859375,
      "width": 445,
      "height": 1696,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 1344305303,
      "version": 1617,
      "versionNonce": 1574080665,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1660205058064,
      "link": null,
      "locked": false,
      "text": "class LRUCache {\npublic:\n    struct Node {\n        int key, val;\n        Node* pre, next;\n        Node(){};\n        Node(int key, int val):key(key), val(val), pre(NULL), next(NULL\n    };\n    LRUCache(int size) {\n        this->size = size;\n        head = new Node();\n        tail = new Node();\n        head->next = tail;\n        tail->pre = head;\n    }\n    \n    void put(int key, int val) {\n        if ( map.count(key) ) {\n            Node* cur = map[key];\n            cur->val = val;\n            make_recently(cur);\n        } else {\n            Node* cur = new Node(key, val);\n            if ( map.size() == size ) {\n                // 删除最久未使用的节点\n                Node* delete_node = delete_cur_node(tail->pre);\n                map.erase( delete_node->key );\n            }\n            move_to_head(cur);\n            map[key] = val;\n        }\n    }\n    \n    Node* delete_cur_node(Node* cur) {\n        cur->pre->next = cur->next;\n        cur->next->pre = cur->pre;\n        return cur;\n    }    \n\n    void make_recently(Node* cur) {\n        Node* tmp = delete_cur_node(cur);\n        move_to_head(tmp);\n    }\n    void move_to_head(Node* tmp) {\n        Node* next = head->next;\n        head->next = tmp;\n        tmp->pre = head;\n        tmp->next = next;\n        next->pre = tmp;        \n    }\n\n    int get(int key) {\n        if map.contain(key) {\n            Node* cur = map[key];\n            make_recently(cur);\n            return cur->val; \n        }\n        return -1;\n    }\nprivate:\n    Node* head, tail;\n    unordered_map<int, Node*> map;\n    int size;\n};",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 1691,
      "containerId": null,
      "originalText": "class LRUCache {\npublic:\n    struct Node {\n        int key, val;\n        Node* pre, next;\n        Node(){};\n        Node(int key, int val):key(key), val(val), pre(NULL), next(NULL\n    };\n    LRUCache(int size) {\n        this->size = size;\n        head = new Node();\n        tail = new Node();\n        head->next = tail;\n        tail->pre = head;\n    }\n    \n    void put(int key, int val) {\n        if ( map.count(key) ) {\n            Node* cur = map[key];\n            cur->val = val;\n            make_recently(cur);\n        } else {\n            Node* cur = new Node(key, val);\n            if ( map.size() == size ) {\n                // 删除最久未使用的节点\n                Node* delete_node = delete_cur_node(tail->pre);\n                map.erase( delete_node->key );\n            }\n            move_to_head(cur);\n            map[key] = val;\n        }\n    }\n    \n    Node* delete_cur_node(Node* cur) {\n        cur->pre->next = cur->next;\n        cur->next->pre = cur->pre;\n        return cur;\n    }    \n\n    void make_recently(Node* cur) {\n        Node* tmp = delete_cur_node(cur);\n        move_to_head(tmp);\n    }\n    void move_to_head(Node* tmp) {\n        Node* next = head->next;\n        head->next = tmp;\n        tmp->pre = head;\n        tmp->next = next;\n        next->pre = tmp;        \n    }\n\n    int get(int key) {\n        if map.contain(key) {\n            Node* cur = map[key];\n            make_recently(cur);\n            return cur->val; \n        }\n        return -1;\n    }\nprivate:\n    Node* head, tail;\n    unordered_map<int, Node*> map;\n    int size;\n};"
    },
    {
      "id": "x4BjEs7C7fB5zz8TDRTkL",
      "type": "text",
      "x": 1019.0390625,
      "y": 625.880859375,
      "width": 21,
      "height": 27,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 1440505207,
      "version": 6,
      "versionNonce": 2025606969,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1660203820344,
      "link": null,
      "locked": false,
      "text": ") {}",
      "fontSize": 20,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 21,
      "containerId": null,
      "originalText": ") {}"
    },
    {
      "id": "7S5KjnQ3NWG_8JUKWc-Gq",
      "type": "ellipse",
      "x": 773.73046875,
      "y": 771.154296875,
      "width": 41.98046875,
      "height": 40.625,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "seed": 1270143287,
      "version": 90,
      "versionNonce": 1652243479,
      "isDeleted": false,
      "boundElements": [
        {
          "id": "zuHhtZLntiqaibU5lJ7XF",
          "type": "arrow"
        },
        {
          "id": "sX9ZnWy2abXjFjEUFCbdK",
          "type": "arrow"
        }
      ],
      "updated": 1660205118587,
      "link": null,
      "locked": false
    },
    {
      "type": "ellipse",
      "version": 100,
      "versionNonce": 1220457207,
      "isDeleted": false,
      "id": "MCrs-6fqlEAKFatXjEh24",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "angle": 0,
      "x": 870.697265625,
      "y": 771.068359375,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "width": 41.98046875,
      "height": 40.625,
      "seed": 417829849,
      "groupIds": [],
      "strokeSharpness": "sharp",
      "boundElements": [
        {
          "id": "zuHhtZLntiqaibU5lJ7XF",
          "type": "arrow"
        },
        {
          "id": "sX9ZnWy2abXjFjEUFCbdK",
          "type": "arrow"
        }
      ],
      "updated": 1660205118587,
      "link": null,
      "locked": false
    },
    {
      "id": "zuHhtZLntiqaibU5lJ7XF",
      "type": "arrow",
      "x": 815.47265625,
      "y": 785.119140625,
      "width": 51.40234375,
      "height": 1.12890625,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "round",
      "seed": 1580670233,
      "version": 38,
      "versionNonce": 350197177,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1660205112340,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          51.40234375,
          1.12890625
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "7S5KjnQ3NWG_8JUKWc-Gq",
        "focus": -0.334851074881452,
        "gap": 1
      },
      "endBinding": {
        "elementId": "MCrs-6fqlEAKFatXjEh24",
        "focus": 0.22580654598155617,
        "gap": 4.376437237408009
      },
      "startArrowhead": null,
      "endArrowhead": "arrow"
    },
    {
      "id": "sX9ZnWy2abXjFjEUFCbdK",
      "type": "arrow",
      "x": 872.48828125,
      "y": 804.681640625,
      "width": 59.37109375,
      "height": 1.90625,
      "angle": 0,
      "strokeColor": "#000000",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 0,
      "opacity": 100,
      "groupIds": [],
      "strokeSharpness": "round",
      "seed": 1001813657,
      "version": 58,
      "versionNonce": 770923513,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1660205118587,
      "link": null,
      "locked": false,
      "points": [
        [
          0,
          0
        ],
        [
          -59.37109375,
          -1.90625
        ]
      ],
      "lastCommittedPoint": null,
      "startBinding": {
        "elementId": "MCrs-6fqlEAKFatXjEh24",
        "focus": -0.6847785303827335,
        "gap": 2.5922100144776685
      },
      "endBinding": {
        "elementId": "7S5KjnQ3NWG_8JUKWc-Gq",
        "focus": 0.52736179756527,
        "gap": 1
      },
      "startArrowhead": null,
      "endArrowhead": "arrow"
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}